name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          unzip \
          openjdk-11-jdk \
          python3-pip \
          python3-dev \
          python3-setuptools \
          libffi-dev \
          libssl-dev \
          zlib1g-dev \
          libncurses5-dev \
          cmake \
          ccache
    
    - name: Set up Android SDK
      run: |
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        mkdir -p $ANDROID_HOME
        cd $ANDROID_HOME
        
        # Download and install command line tools
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip -q commandlinetools-linux-8512546_latest.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/ || true
        
        # Set environment variables
        export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV
        
        # Accept licenses and install SDK components
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-30" "build-tools;30.0.3" "platform-tools" "ndk;23.1.7779620"
    
    - name: Set up Java 11 environment
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install buildozer cython==0.29.33
        python -m pip install kivy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Cache Buildozer directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          ${{ runner.os }}-buildozer-
    
    - name: Build Android APK
      run: |
        buildozer android debug
      env:
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
    
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-debug
        path: bin/*.apk
        retention-days: 30
    
    - name: List build output
      run: |
        echo "Build completed. Contents:"
        ls -la bin/ || echo "No bin directory"
        find . -name "*.apk" -type f || echo "No APK files found"
